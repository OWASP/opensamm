<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OWASP SAMM</title><link>https://owaspsamm.org/es/</link><description>Recent content on OWASP SAMM</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://owaspsamm.org/es/index.xml" rel="self" type="application/rss+xml"/><item><title>Application Risk Profile</title><link>https://owaspsamm.org/es/model/design/threat-assessment/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/threat-assessment/stream-a/</guid><description/></item><item><title>Architecture Assessment</title><link>https://owaspsamm.org/es/model/verification/architecture-assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/architecture-assessment/</guid><description>The Architecture Assessment (AA) practice ensures that the application and infrastructure architecture adequately meets all relevant security and compliance requirements, and sufficiently mitigates identified security threats. The first stream focuses on verifying that the security and compliance requirements identified in the Policy &amp;amp; Compliance and Security Requirements practices are met, first in an ad-hoc manner, then more systematically for each interface in the system. The second stream reviews the architecture, first for mitigations against typical threats, then against the specific threats identified in the Threat Assessment practice.</description></item><item><title>Architecture Design</title><link>https://owaspsamm.org/es/model/design/security-architecture/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/security-architecture/stream-a/</guid><description/></item><item><title>Architecture Mitigation</title><link>https://owaspsamm.org/es/model/verification/architecture-assessment/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/architecture-assessment/stream-b/</guid><description/></item><item><title>Architecture Validation</title><link>https://owaspsamm.org/es/model/verification/architecture-assessment/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/architecture-assessment/stream-a/</guid><description/></item><item><title>Build Process</title><link>https://owaspsamm.org/es/model/implementation/secure-build/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/secure-build/stream-a/</guid><description/></item><item><title>Compliance Management</title><link>https://owaspsamm.org/es/model/governance/policy-and-compliance/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/policy-and-compliance/stream-b/</guid><description/></item><item><title>Configuration Hardening</title><link>https://owaspsamm.org/es/model/operations/environment-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/environment-management/stream-a/</guid><description/></item><item><title>Control Verification</title><link>https://owaspsamm.org/es/model/verification/requirements-driven-testing/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/requirements-driven-testing/stream-a/</guid><description/></item><item><title>Create and Promote</title><link>https://owaspsamm.org/es/model/governance/strategy-and-metrics/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/strategy-and-metrics/stream-a/</guid><description/></item><item><title>Data Protection</title><link>https://owaspsamm.org/es/model/operations/operational-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/operational-management/stream-a/</guid><description/></item><item><title>Deep Understanding</title><link>https://owaspsamm.org/es/model/verification/security-testing/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/security-testing/stream-b/</guid><description/></item><item><title>Defect Management</title><link>https://owaspsamm.org/es/model/implementation/defect-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/defect-management/</guid><description>The Defect Management (DM) practice focuses on collecting, recording, and analyzing software security defects and enriching them with information to drive metrics-based decisions.
The practice’s first stream deals with the process of handling and managing defects to ensure released software has a given assurance level. The second stream focuses on enriching the information about the defects and deriving metrics to guide decisions about the security of individual projects and of the security assurance program as a whole.</description></item><item><title>Defect Tracking</title><link>https://owaspsamm.org/es/model/implementation/defect-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/defect-management/stream-a/</guid><description/></item><item><title>Deployment Process</title><link>https://owaspsamm.org/es/model/implementation/secure-deployment/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/secure-deployment/stream-a/</guid><description/></item><item><title>Design</title><link>https://owaspsamm.org/es/model/design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/</guid><description>Design concerns the processes and activities related to how an organization defines goals and creates software within development projects. In general, this will include requirements gathering, high-level architecture specification and detailed design.</description></item><item><title>Education &amp; Guidance</title><link>https://owaspsamm.org/es/model/governance/education-and-guidance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/education-and-guidance/</guid><description>The Education &amp;amp; Guidance (EG) practice focuses on arming personnel involved in the software lifecycle with knowledge and resources to design, develop, and deploy secure software. With improved access to information, project teams can proactively identify and mitigate the specific security risks that apply to their organization.
One major theme for improvement across the Objectives is providing training for employees and increasing their security awareness, either through instructor-led sessions or computer-based modules.</description></item><item><title>El Modelo</title><link>https://owaspsamm.org/es/model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/</guid><description>Selecciona un idioma English Español Visión general del modelo SAMM Governance Design Implementation Verification Operations Strategy and Metrics Threat Assessment Secure Build Architecture Assessment Incident Management Policy and Compliance Security Requirements Secure Deployment Requirements-driven Testing Environment Management Education and Guidance Security Architecture Defect Management Security Testing Operational Management Introducción La misión del Modelo de madurez de aseguramiento de software de OWASP (SAMM) es ser el modelo de madurez principal para el aseguramiento de software que proporciona una forma efectiva y medible para que todo tipo de organizaciones analicen y mejoren su postura de seguridad de software.</description></item><item><title>Environment Management</title><link>https://owaspsamm.org/es/model/operations/environment-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/environment-management/</guid><description>The organization&amp;rsquo;s work on application security doesn&amp;rsquo;t end once the application becomes operational. New security features and patches are regularly released for the various elements of the technology stack you&amp;rsquo;re using, until they become obsolete or are no longer supported.
Most of the technologies in any application stack are not secure by default. This is frequently intentional, to enhance backwards compatibility or ease of setup. For this reason, ensuring the secure operation of the organization&amp;rsquo;s technology stack requires the consistent application of secure baseline configurations to all components.</description></item><item><title>Governance</title><link>https://owaspsamm.org/es/model/governance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/</guid><description>Governance focuses on the processes and activities related to how an organization manages overall software development activities. More specifically, this includes concerns that impact cross-functional groups involved in development, as well as business processes established at the organization level.</description></item><item><title>Implementation</title><link>https://owaspsamm.org/es/model/implementation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/</guid><description>Implementation is focused on the processes and activities related to how an organization builds and deploys software components and its related defects.
Activities within the Implementation function have the most impact on the daily life of developers. The joint goal is to ship reliably working software with minimum defects.</description></item><item><title>Incident Detection</title><link>https://owaspsamm.org/es/model/operations/incident-management/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/incident-management/stream-a/</guid><description/></item><item><title>Incident Management</title><link>https://owaspsamm.org/es/model/operations/incident-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/incident-management/</guid><description>Once your organization has applications in operation, you&amp;rsquo;re likely to face security incidents. In this model, we define a security incident as a breach, or the threat of an imminent breach, of at least one asset&amp;rsquo;s security goals, whether due to malicious or negligent behavior. Examples of security incidents might include: a successful Denial of Service (DoS) attack against a cloud application, an application user accessing private data of another by abusing a security vulnerability, or an attacker modifying application source code.</description></item><item><title>Incident Response</title><link>https://owaspsamm.org/es/model/operations/incident-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/incident-management/stream-b/</guid><description/></item><item><title>Measure and Improve</title><link>https://owaspsamm.org/es/model/governance/strategy-and-metrics/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/strategy-and-metrics/stream-b/</guid><description/></item><item><title>Metrics and Feedback</title><link>https://owaspsamm.org/es/model/implementation/defect-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/defect-management/stream-b/</guid><description/></item><item><title>Misuse/Abuse Testing</title><link>https://owaspsamm.org/es/model/verification/requirements-driven-testing/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/requirements-driven-testing/stream-b/</guid><description/></item><item><title>Operational Management</title><link>https://owaspsamm.org/es/model/operations/operational-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/operational-management/</guid><description>The Operational Management (OM) practice focuses on activities to ensure security is maintained throughout operational support functions. Although these functions are not performed directly by an application, the overall security of the application and its data depends on their proper performance. Deploying an application on an unsupported operating system with unpatched vulnerabilities, or failing to store backup media securely, can make the protections built into that application irrelevant.
The functions covered by this practice include, but are not limited to: system provisioning, administration, and decommissioning; database provisioning and administration; and data backup, restore, and archival.</description></item><item><title>Operations</title><link>https://owaspsamm.org/es/model/operations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/</guid><description>The Operations Business Function encompasses those activities necessary to ensure confidentiality, integrity, and availability are maintained throughout the operational lifetime of an application and its associated data. Increased maturity with regard to this Business Function provides greater assurance that the organization is resilient in the face of operational disruptions, and responsive to changes in the operational landscape.</description></item><item><title>Organization and Culture</title><link>https://owaspsamm.org/es/model/governance/education-and-guidance/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/education-and-guidance/stream-b/</guid><description/></item><item><title>Patching and Updating</title><link>https://owaspsamm.org/es/model/operations/environment-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/environment-management/stream-b/</guid><description/></item><item><title>Policy &amp; Compliance</title><link>https://owaspsamm.org/es/model/governance/policy-and-compliance/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/policy-and-compliance/</guid><description>The Policy &amp;amp; Compliance (PC) practice focuses on understanding and meeting external legal and regulatory requirements while driving internal security standards to ensure compliance in a way that’s aligned with the business purpose of the organization.
A driving theme for improvement within this practice is describing organization’s standards and 3rd party obligations as application requirements, enabling efficient and automated audits that may be leveraged within the SDLC and continuously demonstrate that all expectations are met.</description></item><item><title>Policy &amp; Standards</title><link>https://owaspsamm.org/es/model/governance/policy-and-compliance/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/policy-and-compliance/stream-a/</guid><description/></item><item><title>Requirements-driven Testing</title><link>https://owaspsamm.org/es/model/verification/requirements-driven-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/requirements-driven-testing/</guid><description>The goal of the Requirements-driven Testing (RT) practice is to ensure that the implemented security controls operate as expected and satisfy the project&amp;rsquo;s stated security requirements. It does so by incrementally building a set of security test and regression cases and executing them regularly.
A key aspect of this practice is its attention to both positive and negative testing. The former verifies that the application&amp;rsquo;s security controls satisfy stated security requirements and validates their correct functioning.</description></item><item><title>Scalable Baseline</title><link>https://owaspsamm.org/es/model/verification/security-testing/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/security-testing/stream-a/</guid><description/></item><item><title>Secret Management</title><link>https://owaspsamm.org/es/model/implementation/secure-deployment/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/secure-deployment/stream-b/</guid><description/></item><item><title>Secure Build</title><link>https://owaspsamm.org/es/model/implementation/secure-build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/secure-build/</guid><description>The Secure Build (SB) practice emphasises the importance of building software in a standardised, repeatable manner, and of doing so using secure components, including 3rd party software dependencies.
The first stream focuses on removing any subjectivity from the build process by striving for full automation. An automated build pipeline can include additional automated security checks such as SAST and DAST to gain further assurance and flag security regressions early by failing the build, for example.</description></item><item><title>Secure Deployment</title><link>https://owaspsamm.org/es/model/implementation/secure-deployment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/secure-deployment/</guid><description>One of the final stages in delivering secure software is ensuring the security and integrity of developed applications are not compromised during deployment. The Secure Deployment (SD) practice focuses on this. To this end, the practice’s first stream focuses on removing manual error by automating the deployment process as much as possible, and making its success contingent upon the outcomes of integrated security verification checks. It also fosters Separation of Duties by making adequately trained, non-developers responsible for deployment.</description></item><item><title>Security Architecture</title><link>https://owaspsamm.org/es/model/design/security-architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/security-architecture/</guid><description>The Security Architecture (SA) practice focuses on the security linked to components and technology you deal with during the architectural design of your software. Secure Architecture Design looks at the selection and composition of components that form the foundation of your solution, focusing on its security properties. Technology management looks at the security of supporting technologies used during development, deployment and operations, such as development stacks and tooling, deployment tooling, and operating systems and tooling.</description></item><item><title>Security Requirements</title><link>https://owaspsamm.org/es/model/design/security-requirements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/security-requirements/</guid><description>The Security Requirements (SR) practice focuses on security requirements that are important in the context of secure software. A first type deals with typical software-related requirements, to specify objectives and expectations to protect the service and data at the core of the application. A second type deals with requirements relative to supplier organizations that are part of the development context of the application, in particular for outsourced development. It is important to streamline the expectations in terms of secure development because outsourced development can have significant impact on the security of the application.</description></item><item><title>Security Testing</title><link>https://owaspsamm.org/es/model/verification/security-testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/security-testing/</guid><description>The Security Testing (ST) practice leverages the fact that, while automated security testing is fast and scales well to numerous applications, in-depth testing based on good knowledge of an application and its business logic is often only possible via slower, manual expert security testing. Each stream therefore has one approach at its core.
The first stream focuses on establishing a common security baseline to automatically detect so-called &amp;ldquo;low hanging fruit&amp;rdquo;. Progressively customize the automated tests for each application and increase their frequency of execution to detect more bugs and regressions earlier, as close as possible to their inception.</description></item><item><title>Software Dependencies</title><link>https://owaspsamm.org/es/model/implementation/secure-build/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/implementation/secure-build/stream-b/</guid><description/></item><item><title>Software Requirements</title><link>https://owaspsamm.org/es/model/design/security-requirements/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/security-requirements/stream-a/</guid><description/></item><item><title>Strategy &amp; Metrics</title><link>https://owaspsamm.org/es/model/governance/strategy-and-metrics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/strategy-and-metrics/</guid><description>Software assurance entails many different activities and concerns. Without an overall plan, you might be spending a lot of effort to build in security, while in fact your efforts may be unaligned, disproportional or even counterproductive. The goal of the Strategy &amp;amp; Metrics (SM) practice is to build an efficient and effective plan for realizing your software security objectives within your organization.
A software security program, that selects and prioritizes activities of the rest of the model, serves as the foundation for your efforts.</description></item><item><title>Supplier Security</title><link>https://owaspsamm.org/es/model/design/security-requirements/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/security-requirements/stream-b/</guid><description/></item><item><title>System Decomissioning / Legacy Management</title><link>https://owaspsamm.org/es/model/operations/operational-management/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/operations/operational-management/stream-b/</guid><description/></item><item><title>Technology Management</title><link>https://owaspsamm.org/es/model/design/security-architecture/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/security-architecture/stream-b/</guid><description/></item><item><title>Threat Assessment</title><link>https://owaspsamm.org/es/model/design/threat-assessment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/threat-assessment/</guid><description>The Threat Assessment (TA) practice focuses on identifying and understanding of project-level risks based on the functionality of the software being developed and characteristics of the runtime environment. From details about threats and likely attacks against each project, the organization as a whole operates more effectively through better decisions about prioritization of initiatives for security. Additionally, decisions for risk acceptance are more informed, therefore better aligned to the business.
By starting with simple threat models and building application risk profiles, an organization improves over time.</description></item><item><title>Threat Modeling</title><link>https://owaspsamm.org/es/model/design/threat-assessment/stream-b/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/design/threat-assessment/stream-b/</guid><description/></item><item><title>Training and Awareness</title><link>https://owaspsamm.org/es/model/governance/education-and-guidance/stream-a/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/governance/education-and-guidance/stream-a/</guid><description/></item><item><title>Verification</title><link>https://owaspsamm.org/es/model/verification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://owaspsamm.org/es/model/verification/</guid><description>Verification focuses on the processes and activities related to how an organization checks and tests artifacts produced throughout software development. This typically includes quality assurance work such as testing, but it can also include other review and evaluation activities.</description></item></channel></rss>